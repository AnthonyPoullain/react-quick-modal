{"version":3,"file":"Modal.stories-c1c12d83.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/tabbable/dist/index.esm.js","../../node_modules/focus-trap/dist/focus-trap.esm.js","../../node_modules/focus-trap-react/dist/focus-trap-react.js","../../src/components/ConditionalPortalWrapper/ConditionalPortalWrapper.tsx","../../src/components/Modal/Modal.tsx","../../src/components/Modal/Modal.stories.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/*!\n* tabbable 6.1.1\n* @license MIT, https://github.com/focus-trap/tabbable/blob/master/LICENSE\n*/\n// NOTE: separate `:not()` selectors has broader browser support than the newer\n//  `:not([inert], [inert] *)` (Feb 2023)\n// CAREFUL: JSDom does not support `:not([inert] *)` as a selector; using it causes\n//  the entire query to fail, resulting in no nodes found, which will break a lot\n//  of things... so we have to rely on JS to identify nodes inside an inert container\nvar candidateSelectors = ['input:not([inert])', 'select:not([inert])', 'textarea:not([inert])', 'a[href]:not([inert])', 'button:not([inert])', '[tabindex]:not(slot):not([inert])', 'audio[controls]:not([inert])', 'video[controls]:not([inert])', '[contenteditable]:not([contenteditable=\"false\"]):not([inert])', 'details>summary:first-of-type:not([inert])', 'details:not([inert])'];\nvar candidateSelector = /* #__PURE__ */candidateSelectors.join(',');\nvar NoElement = typeof Element === 'undefined';\nvar matches = NoElement ? function () {} : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\nvar getRootNode = !NoElement && Element.prototype.getRootNode ? function (element) {\n  var _element$getRootNode;\n  return element === null || element === void 0 ? void 0 : (_element$getRootNode = element.getRootNode) === null || _element$getRootNode === void 0 ? void 0 : _element$getRootNode.call(element);\n} : function (element) {\n  return element === null || element === void 0 ? void 0 : element.ownerDocument;\n};\n\n/**\n * Determines if a node is inert or in an inert ancestor.\n * @param {Element} [node]\n * @param {boolean} [lookUp] If true and `node` is not inert, looks up at ancestors to\n *  see if any of them are inert. If false, only `node` itself is considered.\n * @returns {boolean} True if inert itself or by way of being in an inert ancestor.\n *  False if `node` is falsy.\n */\nvar isInert = function isInert(node, lookUp) {\n  var _node$getAttribute;\n  if (lookUp === void 0) {\n    lookUp = true;\n  }\n  // CAREFUL: JSDom does not support inert at all, so we can't use the `HTMLElement.inert`\n  //  JS API property; we have to check the attribute, which can either be empty or 'true';\n  //  if it's `null` (not specified) or 'false', it's an active element\n  var inertAtt = node === null || node === void 0 ? void 0 : (_node$getAttribute = node.getAttribute) === null || _node$getAttribute === void 0 ? void 0 : _node$getAttribute.call(node, 'inert');\n  var inert = inertAtt === '' || inertAtt === 'true';\n\n  // NOTE: this could also be handled with `node.matches('[inert], :is([inert] *)')`\n  //  if it weren't for `matches()` not being a function on shadow roots; the following\n  //  code works for any kind of node\n  // CAREFUL: JSDom does not appear to support certain selectors like `:not([inert] *)`\n  //  so it likely would not support `:is([inert] *)` either...\n  var result = inert || lookUp && node && isInert(node.parentNode); // recursive\n\n  return result;\n};\n\n/**\n * Determines if a node's content is editable.\n * @param {Element} [node]\n * @returns True if it's content-editable; false if it's not or `node` is falsy.\n */\nvar isContentEditable = function isContentEditable(node) {\n  var _node$getAttribute2;\n  // CAREFUL: JSDom does not support the `HTMLElement.isContentEditable` API so we have\n  //  to use the attribute directly to check for this, which can either be empty or 'true';\n  //  if it's `null` (not specified) or 'false', it's a non-editable element\n  var attValue = node === null || node === void 0 ? void 0 : (_node$getAttribute2 = node.getAttribute) === null || _node$getAttribute2 === void 0 ? void 0 : _node$getAttribute2.call(node, 'contenteditable');\n  return attValue === '' || attValue === 'true';\n};\n\n/**\n * @param {Element} el container to check in\n * @param {boolean} includeContainer add container to check\n * @param {(node: Element) => boolean} filter filter candidates\n * @returns {Element[]}\n */\nvar getCandidates = function getCandidates(el, includeContainer, filter) {\n  // even if `includeContainer=false`, we still have to check it for inertness because\n  //  if it's inert, all its children are inert\n  if (isInert(el)) {\n    return [];\n  }\n  var candidates = Array.prototype.slice.apply(el.querySelectorAll(candidateSelector));\n  if (includeContainer && matches.call(el, candidateSelector)) {\n    candidates.unshift(el);\n  }\n  candidates = candidates.filter(filter);\n  return candidates;\n};\n\n/**\n * @callback GetShadowRoot\n * @param {Element} element to check for shadow root\n * @returns {ShadowRoot|boolean} ShadowRoot if available or boolean indicating if a shadowRoot is attached but not available.\n */\n\n/**\n * @callback ShadowRootFilter\n * @param {Element} shadowHostNode the element which contains shadow content\n * @returns {boolean} true if a shadow root could potentially contain valid candidates.\n */\n\n/**\n * @typedef {Object} CandidateScope\n * @property {Element} scopeParent contains inner candidates\n * @property {Element[]} candidates list of candidates found in the scope parent\n */\n\n/**\n * @typedef {Object} IterativeOptions\n * @property {GetShadowRoot|boolean} getShadowRoot true if shadow support is enabled; falsy if not;\n *  if a function, implies shadow support is enabled and either returns the shadow root of an element\n *  or a boolean stating if it has an undisclosed shadow root\n * @property {(node: Element) => boolean} filter filter candidates\n * @property {boolean} flatten if true then result will flatten any CandidateScope into the returned list\n * @property {ShadowRootFilter} shadowRootFilter filter shadow roots;\n */\n\n/**\n * @param {Element[]} elements list of element containers to match candidates from\n * @param {boolean} includeContainer add container list to check\n * @param {IterativeOptions} options\n * @returns {Array.<Element|CandidateScope>}\n */\nvar getCandidatesIteratively = function getCandidatesIteratively(elements, includeContainer, options) {\n  var candidates = [];\n  var elementsToCheck = Array.from(elements);\n  while (elementsToCheck.length) {\n    var element = elementsToCheck.shift();\n    if (isInert(element, false)) {\n      // no need to look up since we're drilling down\n      // anything inside this container will also be inert\n      continue;\n    }\n    if (element.tagName === 'SLOT') {\n      // add shadow dom slot scope (slot itself cannot be focusable)\n      var assigned = element.assignedElements();\n      var content = assigned.length ? assigned : element.children;\n      var nestedCandidates = getCandidatesIteratively(content, true, options);\n      if (options.flatten) {\n        candidates.push.apply(candidates, nestedCandidates);\n      } else {\n        candidates.push({\n          scopeParent: element,\n          candidates: nestedCandidates\n        });\n      }\n    } else {\n      // check candidate element\n      var validCandidate = matches.call(element, candidateSelector);\n      if (validCandidate && options.filter(element) && (includeContainer || !elements.includes(element))) {\n        candidates.push(element);\n      }\n\n      // iterate over shadow content if possible\n      var shadowRoot = element.shadowRoot ||\n      // check for an undisclosed shadow\n      typeof options.getShadowRoot === 'function' && options.getShadowRoot(element);\n\n      // no inert look up because we're already drilling down and checking for inertness\n      //  on the way down, so all containers to this root node should have already been\n      //  vetted as non-inert\n      var validShadowRoot = !isInert(shadowRoot, false) && (!options.shadowRootFilter || options.shadowRootFilter(element));\n      if (shadowRoot && validShadowRoot) {\n        // add shadow dom scope IIF a shadow root node was given; otherwise, an undisclosed\n        //  shadow exists, so look at light dom children as fallback BUT create a scope for any\n        //  child candidates found because they're likely slotted elements (elements that are\n        //  children of the web component element (which has the shadow), in the light dom, but\n        //  slotted somewhere _inside_ the undisclosed shadow) -- the scope is created below,\n        //  _after_ we return from this recursive call\n        var _nestedCandidates = getCandidatesIteratively(shadowRoot === true ? element.children : shadowRoot.children, true, options);\n        if (options.flatten) {\n          candidates.push.apply(candidates, _nestedCandidates);\n        } else {\n          candidates.push({\n            scopeParent: element,\n            candidates: _nestedCandidates\n          });\n        }\n      } else {\n        // there's not shadow so just dig into the element's (light dom) children\n        //  __without__ giving the element special scope treatment\n        elementsToCheck.unshift.apply(elementsToCheck, element.children);\n      }\n    }\n  }\n  return candidates;\n};\nvar getTabindex = function getTabindex(node, isScope) {\n  if (node.tabIndex < 0) {\n    // in Chrome, <details/>, <audio controls/> and <video controls/> elements get a default\n    // `tabIndex` of -1 when the 'tabindex' attribute isn't specified in the DOM,\n    // yet they are still part of the regular tab order; in FF, they get a default\n    // `tabIndex` of 0; since Chrome still puts those elements in the regular tab\n    // order, consider their tab index to be 0.\n    // Also browsers do not return `tabIndex` correctly for contentEditable nodes;\n    // so if they don't have a tabindex attribute specifically set, assume it's 0.\n    //\n    // isScope is positive for custom element with shadow root or slot that by default\n    // have tabIndex -1, but need to be sorted by document order in order for their\n    // content to be inserted in the correct position\n    if ((isScope || /^(AUDIO|VIDEO|DETAILS)$/.test(node.tagName) || isContentEditable(node)) && isNaN(parseInt(node.getAttribute('tabindex'), 10))) {\n      return 0;\n    }\n  }\n  return node.tabIndex;\n};\nvar sortOrderedTabbables = function sortOrderedTabbables(a, b) {\n  return a.tabIndex === b.tabIndex ? a.documentOrder - b.documentOrder : a.tabIndex - b.tabIndex;\n};\nvar isInput = function isInput(node) {\n  return node.tagName === 'INPUT';\n};\nvar isHiddenInput = function isHiddenInput(node) {\n  return isInput(node) && node.type === 'hidden';\n};\nvar isDetailsWithSummary = function isDetailsWithSummary(node) {\n  var r = node.tagName === 'DETAILS' && Array.prototype.slice.apply(node.children).some(function (child) {\n    return child.tagName === 'SUMMARY';\n  });\n  return r;\n};\nvar getCheckedRadio = function getCheckedRadio(nodes, form) {\n  for (var i = 0; i < nodes.length; i++) {\n    if (nodes[i].checked && nodes[i].form === form) {\n      return nodes[i];\n    }\n  }\n};\nvar isTabbableRadio = function isTabbableRadio(node) {\n  if (!node.name) {\n    return true;\n  }\n  var radioScope = node.form || getRootNode(node);\n  var queryRadios = function queryRadios(name) {\n    return radioScope.querySelectorAll('input[type=\"radio\"][name=\"' + name + '\"]');\n  };\n  var radioSet;\n  if (typeof window !== 'undefined' && typeof window.CSS !== 'undefined' && typeof window.CSS.escape === 'function') {\n    radioSet = queryRadios(window.CSS.escape(node.name));\n  } else {\n    try {\n      radioSet = queryRadios(node.name);\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s', err.message);\n      return false;\n    }\n  }\n  var checked = getCheckedRadio(radioSet, node.form);\n  return !checked || checked === node;\n};\nvar isRadio = function isRadio(node) {\n  return isInput(node) && node.type === 'radio';\n};\nvar isNonTabbableRadio = function isNonTabbableRadio(node) {\n  return isRadio(node) && !isTabbableRadio(node);\n};\n\n// determines if a node is ultimately attached to the window's document\nvar isNodeAttached = function isNodeAttached(node) {\n  var _nodeRoot;\n  // The root node is the shadow root if the node is in a shadow DOM; some document otherwise\n  //  (but NOT _the_ document; see second 'If' comment below for more).\n  // If rootNode is shadow root, it'll have a host, which is the element to which the shadow\n  //  is attached, and the one we need to check if it's in the document or not (because the\n  //  shadow, and all nodes it contains, is never considered in the document since shadows\n  //  behave like self-contained DOMs; but if the shadow's HOST, which is part of the document,\n  //  is hidden, or is not in the document itself but is detached, it will affect the shadow's\n  //  visibility, including all the nodes it contains). The host could be any normal node,\n  //  or a custom element (i.e. web component). Either way, that's the one that is considered\n  //  part of the document, not the shadow root, nor any of its children (i.e. the node being\n  //  tested).\n  // To further complicate things, we have to look all the way up until we find a shadow HOST\n  //  that is attached (or find none) because the node might be in nested shadows...\n  // If rootNode is not a shadow root, it won't have a host, and so rootNode should be the\n  //  document (per the docs) and while it's a Document-type object, that document does not\n  //  appear to be the same as the node's `ownerDocument` for some reason, so it's safer\n  //  to ignore the rootNode at this point, and use `node.ownerDocument`. Otherwise,\n  //  using `rootNode.contains(node)` will _always_ be true we'll get false-positives when\n  //  node is actually detached.\n  // NOTE: If `nodeRootHost` or `node` happens to be the `document` itself (which is possible\n  //  if a tabbable/focusable node was quickly added to the DOM, focused, and then removed\n  //  from the DOM as in https://github.com/focus-trap/focus-trap-react/issues/905), then\n  //  `ownerDocument` will be `null`, hence the optional chaining on it.\n  var nodeRoot = node && getRootNode(node);\n  var nodeRootHost = (_nodeRoot = nodeRoot) === null || _nodeRoot === void 0 ? void 0 : _nodeRoot.host;\n\n  // in some cases, a detached node will return itself as the root instead of a document or\n  //  shadow root object, in which case, we shouldn't try to look further up the host chain\n  var attached = false;\n  if (nodeRoot && nodeRoot !== node) {\n    var _nodeRootHost, _nodeRootHost$ownerDo, _node$ownerDocument;\n    attached = !!((_nodeRootHost = nodeRootHost) !== null && _nodeRootHost !== void 0 && (_nodeRootHost$ownerDo = _nodeRootHost.ownerDocument) !== null && _nodeRootHost$ownerDo !== void 0 && _nodeRootHost$ownerDo.contains(nodeRootHost) || node !== null && node !== void 0 && (_node$ownerDocument = node.ownerDocument) !== null && _node$ownerDocument !== void 0 && _node$ownerDocument.contains(node));\n    while (!attached && nodeRootHost) {\n      var _nodeRoot2, _nodeRootHost2, _nodeRootHost2$ownerD;\n      // since it's not attached and we have a root host, the node MUST be in a nested shadow DOM,\n      //  which means we need to get the host's host and check if that parent host is contained\n      //  in (i.e. attached to) the document\n      nodeRoot = getRootNode(nodeRootHost);\n      nodeRootHost = (_nodeRoot2 = nodeRoot) === null || _nodeRoot2 === void 0 ? void 0 : _nodeRoot2.host;\n      attached = !!((_nodeRootHost2 = nodeRootHost) !== null && _nodeRootHost2 !== void 0 && (_nodeRootHost2$ownerD = _nodeRootHost2.ownerDocument) !== null && _nodeRootHost2$ownerD !== void 0 && _nodeRootHost2$ownerD.contains(nodeRootHost));\n    }\n  }\n  return attached;\n};\nvar isZeroArea = function isZeroArea(node) {\n  var _node$getBoundingClie = node.getBoundingClientRect(),\n    width = _node$getBoundingClie.width,\n    height = _node$getBoundingClie.height;\n  return width === 0 && height === 0;\n};\nvar isHidden = function isHidden(node, _ref) {\n  var displayCheck = _ref.displayCheck,\n    getShadowRoot = _ref.getShadowRoot;\n  // NOTE: visibility will be `undefined` if node is detached from the document\n  //  (see notes about this further down), which means we will consider it visible\n  //  (this is legacy behavior from a very long way back)\n  // NOTE: we check this regardless of `displayCheck=\"none\"` because this is a\n  //  _visibility_ check, not a _display_ check\n  if (getComputedStyle(node).visibility === 'hidden') {\n    return true;\n  }\n  var isDirectSummary = matches.call(node, 'details>summary:first-of-type');\n  var nodeUnderDetails = isDirectSummary ? node.parentElement : node;\n  if (matches.call(nodeUnderDetails, 'details:not([open]) *')) {\n    return true;\n  }\n  if (!displayCheck || displayCheck === 'full' || displayCheck === 'legacy-full') {\n    if (typeof getShadowRoot === 'function') {\n      // figure out if we should consider the node to be in an undisclosed shadow and use the\n      //  'non-zero-area' fallback\n      var originalNode = node;\n      while (node) {\n        var parentElement = node.parentElement;\n        var rootNode = getRootNode(node);\n        if (parentElement && !parentElement.shadowRoot && getShadowRoot(parentElement) === true // check if there's an undisclosed shadow\n        ) {\n          // node has an undisclosed shadow which means we can only treat it as a black box, so we\n          //  fall back to a non-zero-area test\n          return isZeroArea(node);\n        } else if (node.assignedSlot) {\n          // iterate up slot\n          node = node.assignedSlot;\n        } else if (!parentElement && rootNode !== node.ownerDocument) {\n          // cross shadow boundary\n          node = rootNode.host;\n        } else {\n          // iterate up normal dom\n          node = parentElement;\n        }\n      }\n      node = originalNode;\n    }\n    // else, `getShadowRoot` might be true, but all that does is enable shadow DOM support\n    //  (i.e. it does not also presume that all nodes might have undisclosed shadows); or\n    //  it might be a falsy value, which means shadow DOM support is disabled\n\n    // Since we didn't find it sitting in an undisclosed shadow (or shadows are disabled)\n    //  now we can just test to see if it would normally be visible or not, provided it's\n    //  attached to the main document.\n    // NOTE: We must consider case where node is inside a shadow DOM and given directly to\n    //  `isTabbable()` or `isFocusable()` -- regardless of `getShadowRoot` option setting.\n\n    if (isNodeAttached(node)) {\n      // this works wherever the node is: if there's at least one client rect, it's\n      //  somehow displayed; it also covers the CSS 'display: contents' case where the\n      //  node itself is hidden in place of its contents; and there's no need to search\n      //  up the hierarchy either\n      return !node.getClientRects().length;\n    }\n\n    // Else, the node isn't attached to the document, which means the `getClientRects()`\n    //  API will __always__ return zero rects (this can happen, for example, if React\n    //  is used to render nodes onto a detached tree, as confirmed in this thread:\n    //  https://github.com/facebook/react/issues/9117#issuecomment-284228870)\n    //\n    // It also means that even window.getComputedStyle(node).display will return `undefined`\n    //  because styles are only computed for nodes that are in the document.\n    //\n    // NOTE: THIS HAS BEEN THE CASE FOR YEARS. It is not new, nor is it caused by tabbable\n    //  somehow. Though it was never stated officially, anyone who has ever used tabbable\n    //  APIs on nodes in detached containers has actually implicitly used tabbable in what\n    //  was later (as of v5.2.0 on Apr 9, 2021) called `displayCheck=\"none\"` mode -- essentially\n    //  considering __everything__ to be visible because of the innability to determine styles.\n    //\n    // v6.0.0: As of this major release, the default 'full' option __no longer treats detached\n    //  nodes as visible with the 'none' fallback.__\n    if (displayCheck !== 'legacy-full') {\n      return true; // hidden\n    }\n    // else, fallback to 'none' mode and consider the node visible\n  } else if (displayCheck === 'non-zero-area') {\n    // NOTE: Even though this tests that the node's client rect is non-zero to determine\n    //  whether it's displayed, and that a detached node will __always__ have a zero-area\n    //  client rect, we don't special-case for whether the node is attached or not. In\n    //  this mode, we do want to consider nodes that have a zero area to be hidden at all\n    //  times, and that includes attached or not.\n    return isZeroArea(node);\n  }\n\n  // visible, as far as we can tell, or per current `displayCheck=none` mode, we assume\n  //  it's visible\n  return false;\n};\n\n// form fields (nested) inside a disabled fieldset are not focusable/tabbable\n//  unless they are in the _first_ <legend> element of the top-most disabled\n//  fieldset\nvar isDisabledFromFieldset = function isDisabledFromFieldset(node) {\n  if (/^(INPUT|BUTTON|SELECT|TEXTAREA)$/.test(node.tagName)) {\n    var parentNode = node.parentElement;\n    // check if `node` is contained in a disabled <fieldset>\n    while (parentNode) {\n      if (parentNode.tagName === 'FIELDSET' && parentNode.disabled) {\n        // look for the first <legend> among the children of the disabled <fieldset>\n        for (var i = 0; i < parentNode.children.length; i++) {\n          var child = parentNode.children.item(i);\n          // when the first <legend> (in document order) is found\n          if (child.tagName === 'LEGEND') {\n            // if its parent <fieldset> is not nested in another disabled <fieldset>,\n            // return whether `node` is a descendant of its first <legend>\n            return matches.call(parentNode, 'fieldset[disabled] *') ? true : !child.contains(node);\n          }\n        }\n        // the disabled <fieldset> containing `node` has no <legend>\n        return true;\n      }\n      parentNode = parentNode.parentElement;\n    }\n  }\n\n  // else, node's tabbable/focusable state should not be affected by a fieldset's\n  //  enabled/disabled state\n  return false;\n};\nvar isNodeMatchingSelectorFocusable = function isNodeMatchingSelectorFocusable(options, node) {\n  if (node.disabled ||\n  // we must do an inert look up to filter out any elements inside an inert ancestor\n  //  because we're limited in the type of selectors we can use in JSDom (see related\n  //  note related to `candidateSelectors`)\n  isInert(node) || isHiddenInput(node) || isHidden(node, options) ||\n  // For a details element with a summary, the summary element gets the focus\n  isDetailsWithSummary(node) || isDisabledFromFieldset(node)) {\n    return false;\n  }\n  return true;\n};\nvar isNodeMatchingSelectorTabbable = function isNodeMatchingSelectorTabbable(options, node) {\n  if (isNonTabbableRadio(node) || getTabindex(node) < 0 || !isNodeMatchingSelectorFocusable(options, node)) {\n    return false;\n  }\n  return true;\n};\nvar isValidShadowRootTabbable = function isValidShadowRootTabbable(shadowHostNode) {\n  var tabIndex = parseInt(shadowHostNode.getAttribute('tabindex'), 10);\n  if (isNaN(tabIndex) || tabIndex >= 0) {\n    return true;\n  }\n  // If a custom element has an explicit negative tabindex,\n  // browsers will not allow tab targeting said element's children.\n  return false;\n};\n\n/**\n * @param {Array.<Element|CandidateScope>} candidates\n * @returns Element[]\n */\nvar sortByOrder = function sortByOrder(candidates) {\n  var regularTabbables = [];\n  var orderedTabbables = [];\n  candidates.forEach(function (item, i) {\n    var isScope = !!item.scopeParent;\n    var element = isScope ? item.scopeParent : item;\n    var candidateTabindex = getTabindex(element, isScope);\n    var elements = isScope ? sortByOrder(item.candidates) : element;\n    if (candidateTabindex === 0) {\n      isScope ? regularTabbables.push.apply(regularTabbables, elements) : regularTabbables.push(element);\n    } else {\n      orderedTabbables.push({\n        documentOrder: i,\n        tabIndex: candidateTabindex,\n        item: item,\n        isScope: isScope,\n        content: elements\n      });\n    }\n  });\n  return orderedTabbables.sort(sortOrderedTabbables).reduce(function (acc, sortable) {\n    sortable.isScope ? acc.push.apply(acc, sortable.content) : acc.push(sortable.content);\n    return acc;\n  }, []).concat(regularTabbables);\n};\nvar tabbable = function tabbable(el, options) {\n  options = options || {};\n  var candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively([el], options.includeContainer, {\n      filter: isNodeMatchingSelectorTabbable.bind(null, options),\n      flatten: false,\n      getShadowRoot: options.getShadowRoot,\n      shadowRootFilter: isValidShadowRootTabbable\n    });\n  } else {\n    candidates = getCandidates(el, options.includeContainer, isNodeMatchingSelectorTabbable.bind(null, options));\n  }\n  return sortByOrder(candidates);\n};\nvar focusable = function focusable(el, options) {\n  options = options || {};\n  var candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively([el], options.includeContainer, {\n      filter: isNodeMatchingSelectorFocusable.bind(null, options),\n      flatten: true,\n      getShadowRoot: options.getShadowRoot\n    });\n  } else {\n    candidates = getCandidates(el, options.includeContainer, isNodeMatchingSelectorFocusable.bind(null, options));\n  }\n  return candidates;\n};\nvar isTabbable = function isTabbable(node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, candidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorTabbable(options, node);\n};\nvar focusableCandidateSelector = /* #__PURE__ */candidateSelectors.concat('iframe').join(',');\nvar isFocusable = function isFocusable(node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, focusableCandidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorFocusable(options, node);\n};\n\nexport { focusable, isFocusable, isTabbable, tabbable };\n//# sourceMappingURL=index.esm.js.map\n","/*!\n* focus-trap 7.3.1\n* @license MIT, https://github.com/focus-trap/focus-trap/blob/master/LICENSE\n*/\nimport { tabbable, focusable, isTabbable, isFocusable } from 'tabbable';\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\n\nvar activeFocusTraps = {\n  activateTrap: function activateTrap(trapStack, trap) {\n    if (trapStack.length > 0) {\n      var activeTrap = trapStack[trapStack.length - 1];\n      if (activeTrap !== trap) {\n        activeTrap.pause();\n      }\n    }\n    var trapIndex = trapStack.indexOf(trap);\n    if (trapIndex === -1) {\n      trapStack.push(trap);\n    } else {\n      // move this existing trap to the front of the queue\n      trapStack.splice(trapIndex, 1);\n      trapStack.push(trap);\n    }\n  },\n  deactivateTrap: function deactivateTrap(trapStack, trap) {\n    var trapIndex = trapStack.indexOf(trap);\n    if (trapIndex !== -1) {\n      trapStack.splice(trapIndex, 1);\n    }\n    if (trapStack.length > 0) {\n      trapStack[trapStack.length - 1].unpause();\n    }\n  }\n};\nvar isSelectableInput = function isSelectableInput(node) {\n  return node.tagName && node.tagName.toLowerCase() === 'input' && typeof node.select === 'function';\n};\nvar isEscapeEvent = function isEscapeEvent(e) {\n  return e.key === 'Escape' || e.key === 'Esc' || e.keyCode === 27;\n};\nvar isTabEvent = function isTabEvent(e) {\n  return e.key === 'Tab' || e.keyCode === 9;\n};\n\n// checks for TAB by default\nvar isKeyForward = function isKeyForward(e) {\n  return isTabEvent(e) && !e.shiftKey;\n};\n\n// checks for SHIFT+TAB by default\nvar isKeyBackward = function isKeyBackward(e) {\n  return isTabEvent(e) && e.shiftKey;\n};\nvar delay = function delay(fn) {\n  return setTimeout(fn, 0);\n};\n\n// Array.find/findIndex() are not supported on IE; this replicates enough\n//  of Array.findIndex() for our needs\nvar findIndex = function findIndex(arr, fn) {\n  var idx = -1;\n  arr.every(function (value, i) {\n    if (fn(value)) {\n      idx = i;\n      return false; // break\n    }\n\n    return true; // next\n  });\n\n  return idx;\n};\n\n/**\n * Get an option's value when it could be a plain value, or a handler that provides\n *  the value.\n * @param {*} value Option's value to check.\n * @param {...*} [params] Any parameters to pass to the handler, if `value` is a function.\n * @returns {*} The `value`, or the handler's returned value.\n */\nvar valueOrHandler = function valueOrHandler(value) {\n  for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    params[_key - 1] = arguments[_key];\n  }\n  return typeof value === 'function' ? value.apply(void 0, params) : value;\n};\nvar getActualTarget = function getActualTarget(event) {\n  // NOTE: If the trap is _inside_ a shadow DOM, event.target will always be the\n  //  shadow host. However, event.target.composedPath() will be an array of\n  //  nodes \"clicked\" from inner-most (the actual element inside the shadow) to\n  //  outer-most (the host HTML document). If we have access to composedPath(),\n  //  then use its first element; otherwise, fall back to event.target (and\n  //  this only works for an _open_ shadow DOM; otherwise,\n  //  composedPath()[0] === event.target always).\n  return event.target.shadowRoot && typeof event.composedPath === 'function' ? event.composedPath()[0] : event.target;\n};\n\n// NOTE: this must be _outside_ `createFocusTrap()` to make sure all traps in this\n//  current instance use the same stack if `userOptions.trapStack` isn't specified\nvar internalTrapStack = [];\nvar createFocusTrap = function createFocusTrap(elements, userOptions) {\n  // SSR: a live trap shouldn't be created in this type of environment so this\n  //  should be safe code to execute if the `document` option isn't specified\n  var doc = (userOptions === null || userOptions === void 0 ? void 0 : userOptions.document) || document;\n  var trapStack = (userOptions === null || userOptions === void 0 ? void 0 : userOptions.trapStack) || internalTrapStack;\n  var config = _objectSpread2({\n    returnFocusOnDeactivate: true,\n    escapeDeactivates: true,\n    delayInitialFocus: true,\n    isKeyForward: isKeyForward,\n    isKeyBackward: isKeyBackward\n  }, userOptions);\n  var state = {\n    // containers given to createFocusTrap()\n    // @type {Array<HTMLElement>}\n    containers: [],\n    // list of objects identifying tabbable nodes in `containers` in the trap\n    // NOTE: it's possible that a group has no tabbable nodes if nodes get removed while the trap\n    //  is active, but the trap should never get to a state where there isn't at least one group\n    //  with at least one tabbable node in it (that would lead to an error condition that would\n    //  result in an error being thrown)\n    // @type {Array<{\n    //   container: HTMLElement,\n    //   tabbableNodes: Array<HTMLElement>, // empty if none\n    //   focusableNodes: Array<HTMLElement>, // empty if none\n    //   firstTabbableNode: HTMLElement|null,\n    //   lastTabbableNode: HTMLElement|null,\n    //   nextTabbableNode: (node: HTMLElement, forward: boolean) => HTMLElement|undefined\n    // }>}\n    containerGroups: [],\n    // same order/length as `containers` list\n\n    // references to objects in `containerGroups`, but only those that actually have\n    //  tabbable nodes in them\n    // NOTE: same order as `containers` and `containerGroups`, but __not necessarily__\n    //  the same length\n    tabbableGroups: [],\n    nodeFocusedBeforeActivation: null,\n    mostRecentlyFocusedNode: null,\n    active: false,\n    paused: false,\n    // timer ID for when delayInitialFocus is true and initial focus in this trap\n    //  has been delayed during activation\n    delayInitialFocusTimer: undefined\n  };\n  var trap; // eslint-disable-line prefer-const -- some private functions reference it, and its methods reference private functions, so we must declare here and define later\n\n  /**\n   * Gets a configuration option value.\n   * @param {Object|undefined} configOverrideOptions If true, and option is defined in this set,\n   *  value will be taken from this object. Otherwise, value will be taken from base configuration.\n   * @param {string} optionName Name of the option whose value is sought.\n   * @param {string|undefined} [configOptionName] Name of option to use __instead of__ `optionName`\n   *  IIF `configOverrideOptions` is not defined. Otherwise, `optionName` is used.\n   */\n  var getOption = function getOption(configOverrideOptions, optionName, configOptionName) {\n    return configOverrideOptions && configOverrideOptions[optionName] !== undefined ? configOverrideOptions[optionName] : config[configOptionName || optionName];\n  };\n\n  /**\n   * Finds the index of the container that contains the element.\n   * @param {HTMLElement} element\n   * @returns {number} Index of the container in either `state.containers` or\n   *  `state.containerGroups` (the order/length of these lists are the same); -1\n   *  if the element isn't found.\n   */\n  var findContainerIndex = function findContainerIndex(element) {\n    // NOTE: search `containerGroups` because it's possible a group contains no tabbable\n    //  nodes, but still contains focusable nodes (e.g. if they all have `tabindex=-1`)\n    //  and we still need to find the element in there\n    return state.containerGroups.findIndex(function (_ref) {\n      var container = _ref.container,\n        tabbableNodes = _ref.tabbableNodes;\n      return container.contains(element) ||\n      // fall back to explicit tabbable search which will take into consideration any\n      //  web components if the `tabbableOptions.getShadowRoot` option was used for\n      //  the trap, enabling shadow DOM support in tabbable (`Node.contains()` doesn't\n      //  look inside web components even if open)\n      tabbableNodes.find(function (node) {\n        return node === element;\n      });\n    });\n  };\n\n  /**\n   * Gets the node for the given option, which is expected to be an option that\n   *  can be either a DOM node, a string that is a selector to get a node, `false`\n   *  (if a node is explicitly NOT given), or a function that returns any of these\n   *  values.\n   * @param {string} optionName\n   * @returns {undefined | false | HTMLElement | SVGElement} Returns\n   *  `undefined` if the option is not specified; `false` if the option\n   *  resolved to `false` (node explicitly not given); otherwise, the resolved\n   *  DOM node.\n   * @throws {Error} If the option is set, not `false`, and is not, or does not\n   *  resolve to a node.\n   */\n  var getNodeForOption = function getNodeForOption(optionName) {\n    var optionValue = config[optionName];\n    if (typeof optionValue === 'function') {\n      for (var _len2 = arguments.length, params = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        params[_key2 - 1] = arguments[_key2];\n      }\n      optionValue = optionValue.apply(void 0, params);\n    }\n    if (optionValue === true) {\n      optionValue = undefined; // use default value\n    }\n\n    if (!optionValue) {\n      if (optionValue === undefined || optionValue === false) {\n        return optionValue;\n      }\n      // else, empty string (invalid), null (invalid), 0 (invalid)\n\n      throw new Error(\"`\".concat(optionName, \"` was specified but was not a node, or did not return a node\"));\n    }\n    var node = optionValue; // could be HTMLElement, SVGElement, or non-empty string at this point\n\n    if (typeof optionValue === 'string') {\n      node = doc.querySelector(optionValue); // resolve to node, or null if fails\n      if (!node) {\n        throw new Error(\"`\".concat(optionName, \"` as selector refers to no known node\"));\n      }\n    }\n    return node;\n  };\n  var getInitialFocusNode = function getInitialFocusNode() {\n    var node = getNodeForOption('initialFocus');\n\n    // false explicitly indicates we want no initialFocus at all\n    if (node === false) {\n      return false;\n    }\n    if (node === undefined) {\n      // option not specified: use fallback options\n      if (findContainerIndex(doc.activeElement) >= 0) {\n        node = doc.activeElement;\n      } else {\n        var firstTabbableGroup = state.tabbableGroups[0];\n        var firstTabbableNode = firstTabbableGroup && firstTabbableGroup.firstTabbableNode;\n\n        // NOTE: `fallbackFocus` option function cannot return `false` (not supported)\n        node = firstTabbableNode || getNodeForOption('fallbackFocus');\n      }\n    }\n    if (!node) {\n      throw new Error('Your focus-trap needs to have at least one focusable element');\n    }\n    return node;\n  };\n  var updateTabbableNodes = function updateTabbableNodes() {\n    state.containerGroups = state.containers.map(function (container) {\n      var tabbableNodes = tabbable(container, config.tabbableOptions);\n\n      // NOTE: if we have tabbable nodes, we must have focusable nodes; focusable nodes\n      //  are a superset of tabbable nodes\n      var focusableNodes = focusable(container, config.tabbableOptions);\n      return {\n        container: container,\n        tabbableNodes: tabbableNodes,\n        focusableNodes: focusableNodes,\n        firstTabbableNode: tabbableNodes.length > 0 ? tabbableNodes[0] : null,\n        lastTabbableNode: tabbableNodes.length > 0 ? tabbableNodes[tabbableNodes.length - 1] : null,\n        /**\n         * Finds the __tabbable__ node that follows the given node in the specified direction,\n         *  in this container, if any.\n         * @param {HTMLElement} node\n         * @param {boolean} [forward] True if going in forward tab order; false if going\n         *  in reverse.\n         * @returns {HTMLElement|undefined} The next tabbable node, if any.\n         */\n        nextTabbableNode: function nextTabbableNode(node) {\n          var forward = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n          // NOTE: If tabindex is positive (in order to manipulate the tab order separate\n          //  from the DOM order), this __will not work__ because the list of focusableNodes,\n          //  while it contains tabbable nodes, does not sort its nodes in any order other\n          //  than DOM order, because it can't: Where would you place focusable (but not\n          //  tabbable) nodes in that order? They have no order, because they aren't tabbale...\n          // Support for positive tabindex is already broken and hard to manage (possibly\n          //  not supportable, TBD), so this isn't going to make things worse than they\n          //  already are, and at least makes things better for the majority of cases where\n          //  tabindex is either 0/unset or negative.\n          // FYI, positive tabindex issue: https://github.com/focus-trap/focus-trap/issues/375\n          var nodeIdx = focusableNodes.findIndex(function (n) {\n            return n === node;\n          });\n          if (nodeIdx < 0) {\n            return undefined;\n          }\n          if (forward) {\n            return focusableNodes.slice(nodeIdx + 1).find(function (n) {\n              return isTabbable(n, config.tabbableOptions);\n            });\n          }\n          return focusableNodes.slice(0, nodeIdx).reverse().find(function (n) {\n            return isTabbable(n, config.tabbableOptions);\n          });\n        }\n      };\n    });\n    state.tabbableGroups = state.containerGroups.filter(function (group) {\n      return group.tabbableNodes.length > 0;\n    });\n\n    // throw if no groups have tabbable nodes and we don't have a fallback focus node either\n    if (state.tabbableGroups.length <= 0 && !getNodeForOption('fallbackFocus') // returning false not supported for this option\n    ) {\n      throw new Error('Your focus-trap must have at least one container with at least one tabbable node in it at all times');\n    }\n  };\n  var tryFocus = function tryFocus(node) {\n    if (node === false) {\n      return;\n    }\n    if (node === doc.activeElement) {\n      return;\n    }\n    if (!node || !node.focus) {\n      tryFocus(getInitialFocusNode());\n      return;\n    }\n    node.focus({\n      preventScroll: !!config.preventScroll\n    });\n    state.mostRecentlyFocusedNode = node;\n    if (isSelectableInput(node)) {\n      node.select();\n    }\n  };\n  var getReturnFocusNode = function getReturnFocusNode(previousActiveElement) {\n    var node = getNodeForOption('setReturnFocus', previousActiveElement);\n    return node ? node : node === false ? false : previousActiveElement;\n  };\n\n  // This needs to be done on mousedown and touchstart instead of click\n  // so that it precedes the focus event.\n  var checkPointerDown = function checkPointerDown(e) {\n    var target = getActualTarget(e);\n    if (findContainerIndex(target) >= 0) {\n      // allow the click since it ocurred inside the trap\n      return;\n    }\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      // immediately deactivate the trap\n      trap.deactivate({\n        // NOTE: by setting `returnFocus: false`, deactivate() will do nothing,\n        //  which will result in the outside click setting focus to the node\n        //  that was clicked (and if not focusable, to \"nothing\"); by setting\n        //  `returnFocus: true`, we'll attempt to re-focus the node originally-focused\n        //  on activation (or the configured `setReturnFocus` node), whether the\n        //  outside click was on a focusable node or not\n        returnFocus: config.returnFocusOnDeactivate\n      });\n      return;\n    }\n\n    // This is needed for mobile devices.\n    // (If we'll only let `click` events through,\n    // then on mobile they will be blocked anyways if `touchstart` is blocked.)\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      // allow the click outside the trap to take place\n      return;\n    }\n\n    // otherwise, prevent the click\n    e.preventDefault();\n  };\n\n  // In case focus escapes the trap for some strange reason, pull it back in.\n  var checkFocusIn = function checkFocusIn(e) {\n    var target = getActualTarget(e);\n    var targetContained = findContainerIndex(target) >= 0;\n\n    // In Firefox when you Tab out of an iframe the Document is briefly focused.\n    if (targetContained || target instanceof Document) {\n      if (targetContained) {\n        state.mostRecentlyFocusedNode = target;\n      }\n    } else {\n      // escaped! pull it back in to where it just left\n      e.stopImmediatePropagation();\n      tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());\n    }\n  };\n\n  // Hijack key nav events on the first and last focusable nodes of the trap,\n  // in order to prevent focus from escaping. If it escapes for even a\n  // moment it can end up scrolling the page and causing confusion so we\n  // kind of need to capture the action at the keydown phase.\n  var checkKeyNav = function checkKeyNav(event) {\n    var isBackward = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var target = getActualTarget(event);\n    updateTabbableNodes();\n    var destinationNode = null;\n    if (state.tabbableGroups.length > 0) {\n      // make sure the target is actually contained in a group\n      // NOTE: the target may also be the container itself if it's focusable\n      //  with tabIndex='-1' and was given initial focus\n      var containerIndex = findContainerIndex(target);\n      var containerGroup = containerIndex >= 0 ? state.containerGroups[containerIndex] : undefined;\n      if (containerIndex < 0) {\n        // target not found in any group: quite possible focus has escaped the trap,\n        //  so bring it back into...\n        if (isBackward) {\n          // ...the last node in the last group\n          destinationNode = state.tabbableGroups[state.tabbableGroups.length - 1].lastTabbableNode;\n        } else {\n          // ...the first node in the first group\n          destinationNode = state.tabbableGroups[0].firstTabbableNode;\n        }\n      } else if (isBackward) {\n        // REVERSE\n\n        // is the target the first tabbable node in a group?\n        var startOfGroupIndex = findIndex(state.tabbableGroups, function (_ref2) {\n          var firstTabbableNode = _ref2.firstTabbableNode;\n          return target === firstTabbableNode;\n        });\n        if (startOfGroupIndex < 0 && (containerGroup.container === target || isFocusable(target, config.tabbableOptions) && !isTabbable(target, config.tabbableOptions) && !containerGroup.nextTabbableNode(target, false))) {\n          // an exception case where the target is either the container itself, or\n          //  a non-tabbable node that was given focus (i.e. tabindex is negative\n          //  and user clicked on it or node was programmatically given focus)\n          //  and is not followed by any other tabbable node, in which\n          //  case, we should handle shift+tab as if focus were on the container's\n          //  first tabbable node, and go to the last tabbable node of the LAST group\n          startOfGroupIndex = containerIndex;\n        }\n        if (startOfGroupIndex >= 0) {\n          // YES: then shift+tab should go to the last tabbable node in the\n          //  previous group (and wrap around to the last tabbable node of\n          //  the LAST group if it's the first tabbable node of the FIRST group)\n          var destinationGroupIndex = startOfGroupIndex === 0 ? state.tabbableGroups.length - 1 : startOfGroupIndex - 1;\n          var destinationGroup = state.tabbableGroups[destinationGroupIndex];\n          destinationNode = destinationGroup.lastTabbableNode;\n        } else if (!isTabEvent(event)) {\n          // user must have customized the nav keys so we have to move focus manually _within_\n          //  the active group: do this based on the order determined by tabbable()\n          destinationNode = containerGroup.nextTabbableNode(target, false);\n        }\n      } else {\n        // FORWARD\n\n        // is the target the last tabbable node in a group?\n        var lastOfGroupIndex = findIndex(state.tabbableGroups, function (_ref3) {\n          var lastTabbableNode = _ref3.lastTabbableNode;\n          return target === lastTabbableNode;\n        });\n        if (lastOfGroupIndex < 0 && (containerGroup.container === target || isFocusable(target, config.tabbableOptions) && !isTabbable(target, config.tabbableOptions) && !containerGroup.nextTabbableNode(target))) {\n          // an exception case where the target is the container itself, or\n          //  a non-tabbable node that was given focus (i.e. tabindex is negative\n          //  and user clicked on it or node was programmatically given focus)\n          //  and is not followed by any other tabbable node, in which\n          //  case, we should handle tab as if focus were on the container's\n          //  last tabbable node, and go to the first tabbable node of the FIRST group\n          lastOfGroupIndex = containerIndex;\n        }\n        if (lastOfGroupIndex >= 0) {\n          // YES: then tab should go to the first tabbable node in the next\n          //  group (and wrap around to the first tabbable node of the FIRST\n          //  group if it's the last tabbable node of the LAST group)\n          var _destinationGroupIndex = lastOfGroupIndex === state.tabbableGroups.length - 1 ? 0 : lastOfGroupIndex + 1;\n          var _destinationGroup = state.tabbableGroups[_destinationGroupIndex];\n          destinationNode = _destinationGroup.firstTabbableNode;\n        } else if (!isTabEvent(event)) {\n          // user must have customized the nav keys so we have to move focus manually _within_\n          //  the active group: do this based on the order determined by tabbable()\n          destinationNode = containerGroup.nextTabbableNode(target);\n        }\n      }\n    } else {\n      // no groups available\n      // NOTE: the fallbackFocus option does not support returning false to opt-out\n      destinationNode = getNodeForOption('fallbackFocus');\n    }\n    if (destinationNode) {\n      if (isTabEvent(event)) {\n        // since tab natively moves focus, we wouldn't have a destination node unless we\n        //  were on the edge of a container and had to move to the next/previous edge, in\n        //  which case we want to prevent default to keep the browser from moving focus\n        //  to where it normally would\n        event.preventDefault();\n      }\n      tryFocus(destinationNode);\n    }\n    // else, let the browser take care of [shift+]tab and move the focus\n  };\n\n  var checkKey = function checkKey(event) {\n    if (isEscapeEvent(event) && valueOrHandler(config.escapeDeactivates, event) !== false) {\n      event.preventDefault();\n      trap.deactivate();\n      return;\n    }\n    if (config.isKeyForward(event) || config.isKeyBackward(event)) {\n      checkKeyNav(event, config.isKeyBackward(event));\n    }\n  };\n  var checkClick = function checkClick(e) {\n    var target = getActualTarget(e);\n    if (findContainerIndex(target) >= 0) {\n      return;\n    }\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      return;\n    }\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  };\n\n  //\n  // EVENT LISTENERS\n  //\n\n  var addListeners = function addListeners() {\n    if (!state.active) {\n      return;\n    }\n\n    // There can be only one listening focus trap at a time\n    activeFocusTraps.activateTrap(trapStack, trap);\n\n    // Delay ensures that the focused element doesn't capture the event\n    // that caused the focus trap activation.\n    state.delayInitialFocusTimer = config.delayInitialFocus ? delay(function () {\n      tryFocus(getInitialFocusNode());\n    }) : tryFocus(getInitialFocusNode());\n    doc.addEventListener('focusin', checkFocusIn, true);\n    doc.addEventListener('mousedown', checkPointerDown, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('touchstart', checkPointerDown, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('click', checkClick, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('keydown', checkKey, {\n      capture: true,\n      passive: false\n    });\n    return trap;\n  };\n  var removeListeners = function removeListeners() {\n    if (!state.active) {\n      return;\n    }\n    doc.removeEventListener('focusin', checkFocusIn, true);\n    doc.removeEventListener('mousedown', checkPointerDown, true);\n    doc.removeEventListener('touchstart', checkPointerDown, true);\n    doc.removeEventListener('click', checkClick, true);\n    doc.removeEventListener('keydown', checkKey, true);\n    return trap;\n  };\n\n  //\n  // TRAP DEFINITION\n  //\n\n  trap = {\n    get active() {\n      return state.active;\n    },\n    get paused() {\n      return state.paused;\n    },\n    activate: function activate(activateOptions) {\n      if (state.active) {\n        return this;\n      }\n      var onActivate = getOption(activateOptions, 'onActivate');\n      var onPostActivate = getOption(activateOptions, 'onPostActivate');\n      var checkCanFocusTrap = getOption(activateOptions, 'checkCanFocusTrap');\n      if (!checkCanFocusTrap) {\n        updateTabbableNodes();\n      }\n      state.active = true;\n      state.paused = false;\n      state.nodeFocusedBeforeActivation = doc.activeElement;\n      if (onActivate) {\n        onActivate();\n      }\n      var finishActivation = function finishActivation() {\n        if (checkCanFocusTrap) {\n          updateTabbableNodes();\n        }\n        addListeners();\n        if (onPostActivate) {\n          onPostActivate();\n        }\n      };\n      if (checkCanFocusTrap) {\n        checkCanFocusTrap(state.containers.concat()).then(finishActivation, finishActivation);\n        return this;\n      }\n      finishActivation();\n      return this;\n    },\n    deactivate: function deactivate(deactivateOptions) {\n      if (!state.active) {\n        return this;\n      }\n      var options = _objectSpread2({\n        onDeactivate: config.onDeactivate,\n        onPostDeactivate: config.onPostDeactivate,\n        checkCanReturnFocus: config.checkCanReturnFocus\n      }, deactivateOptions);\n      clearTimeout(state.delayInitialFocusTimer); // noop if undefined\n      state.delayInitialFocusTimer = undefined;\n      removeListeners();\n      state.active = false;\n      state.paused = false;\n      activeFocusTraps.deactivateTrap(trapStack, trap);\n      var onDeactivate = getOption(options, 'onDeactivate');\n      var onPostDeactivate = getOption(options, 'onPostDeactivate');\n      var checkCanReturnFocus = getOption(options, 'checkCanReturnFocus');\n      var returnFocus = getOption(options, 'returnFocus', 'returnFocusOnDeactivate');\n      if (onDeactivate) {\n        onDeactivate();\n      }\n      var finishDeactivation = function finishDeactivation() {\n        delay(function () {\n          if (returnFocus) {\n            tryFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation));\n          }\n          if (onPostDeactivate) {\n            onPostDeactivate();\n          }\n        });\n      };\n      if (returnFocus && checkCanReturnFocus) {\n        checkCanReturnFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation)).then(finishDeactivation, finishDeactivation);\n        return this;\n      }\n      finishDeactivation();\n      return this;\n    },\n    pause: function pause() {\n      if (state.paused || !state.active) {\n        return this;\n      }\n      state.paused = true;\n      removeListeners();\n      return this;\n    },\n    unpause: function unpause() {\n      if (!state.paused || !state.active) {\n        return this;\n      }\n      state.paused = false;\n      updateTabbableNodes();\n      addListeners();\n      return this;\n    },\n    updateContainerElements: function updateContainerElements(containerElements) {\n      var elementsAsArray = [].concat(containerElements).filter(Boolean);\n      state.containers = elementsAsArray.map(function (element) {\n        return typeof element === 'string' ? doc.querySelector(element) : element;\n      });\n      if (state.active) {\n        updateTabbableNodes();\n      }\n      return this;\n    }\n  };\n\n  // initialize container elements\n  trap.updateContainerElements(elements);\n  return trap;\n};\n\nexport { createFocusTrap };\n//# sourceMappingURL=focus-trap.esm.js.map\n","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar React = require('react');\nvar PropTypes = require('prop-types');\nvar _require = require('focus-trap'),\n  createFocusTrap = _require.createFocusTrap;\nvar _require2 = require('tabbable'),\n  isFocusable = _require2.isFocusable;\nvar FocusTrap = /*#__PURE__*/function (_React$Component) {\n  _inherits(FocusTrap, _React$Component);\n  var _super = _createSuper(FocusTrap);\n  function FocusTrap(props) {\n    var _this;\n    _classCallCheck(this, FocusTrap);\n    _this = _super.call(this, props);\n    _defineProperty(_assertThisInitialized(_this), \"getNodeForOption\", function (optionName) {\n      var _this$internalOptions;\n      // use internal options first, falling back to original options\n      var optionValue = (_this$internalOptions = this.internalOptions[optionName]) !== null && _this$internalOptions !== void 0 ? _this$internalOptions : this.originalOptions[optionName];\n      if (typeof optionValue === 'function') {\n        for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          params[_key - 1] = arguments[_key];\n        }\n        optionValue = optionValue.apply(void 0, params);\n      }\n      if (optionValue === true) {\n        optionValue = undefined; // use default value\n      }\n\n      if (!optionValue) {\n        if (optionValue === undefined || optionValue === false) {\n          return optionValue;\n        }\n        // else, empty string (invalid), null (invalid), 0 (invalid)\n\n        throw new Error(\"`\".concat(optionName, \"` was specified but was not a node, or did not return a node\"));\n      }\n      var node = optionValue; // could be HTMLElement, SVGElement, or non-empty string at this point\n\n      if (typeof optionValue === 'string') {\n        var _this$getDocument;\n        node = (_this$getDocument = this.getDocument()) === null || _this$getDocument === void 0 ? void 0 : _this$getDocument.querySelector(optionValue); // resolve to node, or null if fails\n        if (!node) {\n          throw new Error(\"`\".concat(optionName, \"` as selector refers to no known node\"));\n        }\n      }\n      return node;\n    });\n    _this.handleDeactivate = _this.handleDeactivate.bind(_assertThisInitialized(_this));\n    _this.handlePostDeactivate = _this.handlePostDeactivate.bind(_assertThisInitialized(_this));\n    _this.handleClickOutsideDeactivates = _this.handleClickOutsideDeactivates.bind(_assertThisInitialized(_this));\n\n    // focus-trap options used internally when creating the trap\n    _this.internalOptions = {\n      // We need to hijack the returnFocusOnDeactivate option,\n      // because React can move focus into the element before we arrived at\n      // this lifecycle hook (e.g. with autoFocus inputs). So the component\n      // captures the previouslyFocusedElement in componentWillMount,\n      // then (optionally) returns focus to it in componentWillUnmount.\n      returnFocusOnDeactivate: false,\n      // the rest of these are also related to deactivation of the trap, and we\n      //  need to use them and control them as well\n      checkCanReturnFocus: null,\n      onDeactivate: _this.handleDeactivate,\n      onPostDeactivate: _this.handlePostDeactivate,\n      // we need to special-case this setting as well so that we can know if we should\n      //  NOT return focus if the trap gets auto-deactivated as the result of an\n      //  outside click (otherwise, we'll always think we should return focus because\n      //  of how we manage that flag internally here)\n      clickOutsideDeactivates: _this.handleClickOutsideDeactivates\n    };\n\n    // original options provided by the consumer\n    _this.originalOptions = {\n      // because of the above `internalOptions`, we maintain our own flag for\n      //  this option, and default it to `true` because that's focus-trap's default\n      returnFocusOnDeactivate: true,\n      // because of the above `internalOptions`, we keep these separate since\n      //  they're part of the deactivation process which we configure (internally) to\n      //  be shared between focus-trap and focus-trap-react\n      onDeactivate: null,\n      onPostDeactivate: null,\n      checkCanReturnFocus: null,\n      // the user's setting, defaulted to false since focus-trap defaults this to false\n      clickOutsideDeactivates: false\n    };\n    var focusTrapOptions = props.focusTrapOptions;\n    for (var optionName in focusTrapOptions) {\n      if (!Object.prototype.hasOwnProperty.call(focusTrapOptions, optionName)) {\n        continue;\n      }\n      if (optionName === 'returnFocusOnDeactivate' || optionName === 'onDeactivate' || optionName === 'onPostDeactivate' || optionName === 'checkCanReturnFocus' || optionName === 'clickOutsideDeactivates') {\n        _this.originalOptions[optionName] = focusTrapOptions[optionName];\n        continue; // exclude from internalOptions\n      }\n\n      _this.internalOptions[optionName] = focusTrapOptions[optionName];\n    }\n\n    // if set, `{ target: Node, allowDeactivation: boolean }` where `target` is the outside\n    //  node that was clicked, and `allowDeactivation` is the result of the consumer's\n    //  option (stored in `this.originalOptions.clickOutsideDeactivates`, which may be a\n    //  function) whether to allow or deny auto-deactivation on click on this outside node\n    _this.outsideClick = null;\n\n    // elements from which to create the focus trap on mount; if a child is used\n    //  instead of the `containerElements` prop, we'll get the child's related\n    //  element when the trap renders and then is declared 'mounted'\n    _this.focusTrapElements = props.containerElements || [];\n\n    // now we remember what the currently focused element is, not relying on focus-trap\n    _this.updatePreviousElement();\n    return _this;\n  }\n\n  /**\n   * Gets the configured document.\n   * @returns {Document|undefined} Configured document, falling back to the main\n   *  document, if it exists. During SSR, `undefined` is returned since the\n   *  document doesn't exist.\n   */\n  _createClass(FocusTrap, [{\n    key: \"getDocument\",\n    value: function getDocument() {\n      // SSR: careful to check if `document` exists before accessing it as a variable\n      return this.props.focusTrapOptions.document || (typeof document !== 'undefined' ? document : undefined);\n    }\n\n    /**\n     * Gets the node for the given option, which is expected to be an option that\n     *  can be either a DOM node, a string that is a selector to get a node, `false`\n     *  (if a node is explicitly NOT given), or a function that returns any of these\n     *  values.\n     * @param {string} optionName\n     * @returns {undefined | false | HTMLElement | SVGElement} Returns\n     *  `undefined` if the option is not specified; `false` if the option\n     *  resolved to `false` (node explicitly not given); otherwise, the resolved\n     *  DOM node.\n     * @throws {Error} If the option is set, not `false`, and is not, or does not\n     *  resolve to a node.\n     */\n  }, {\n    key: \"getReturnFocusNode\",\n    value: function getReturnFocusNode() {\n      var node = this.getNodeForOption('setReturnFocus', this.previouslyFocusedElement);\n      return node ? node : node === false ? false : this.previouslyFocusedElement;\n    }\n\n    /** Update the previously focused element with the currently focused element. */\n  }, {\n    key: \"updatePreviousElement\",\n    value: function updatePreviousElement() {\n      var currentDocument = this.getDocument();\n      if (currentDocument) {\n        this.previouslyFocusedElement = currentDocument.activeElement;\n      }\n    }\n  }, {\n    key: \"deactivateTrap\",\n    value: function deactivateTrap() {\n      // NOTE: it's possible the focus trap has already been deactivated without our knowing it,\n      //  especially if the user set the `clickOutsideDeactivates: true` option on the trap,\n      //  and the mouse was clicked on some element outside the trap; at that point, focus-trap\n      //  will initiate its auto-deactivation process, which will call our own\n      //  handleDeactivate(), which will call into this method\n      if (!this.focusTrap || !this.focusTrap.active) {\n        return;\n      }\n      this.focusTrap.deactivate({\n        // NOTE: we never let the trap return the focus since we do that ourselves\n        returnFocus: false,\n        // we'll call this in our own post deactivate handler so make sure the trap doesn't\n        //  do it prematurely\n        checkCanReturnFocus: null,\n        // let it call the user's original deactivate handler, if any, instead of\n        //  our own which calls back into this function\n        onDeactivate: this.originalOptions.onDeactivate\n        // NOTE: for post deactivate, don't specify anything so that it calls the\n        //  onPostDeactivate handler specified on `this.internalOptions`\n        //  which will always be our own `handlePostDeactivate()` handler, which\n        //  will finish things off by calling the user's provided onPostDeactivate\n        //  handler, if any, at the right time\n        // onPostDeactivate: NOTHING\n      });\n    }\n  }, {\n    key: \"handleClickOutsideDeactivates\",\n    value: function handleClickOutsideDeactivates(event) {\n      // use consumer's option (or call their handler) as the permission or denial\n      var allowDeactivation = typeof this.originalOptions.clickOutsideDeactivates === 'function' ? this.originalOptions.clickOutsideDeactivates.call(null, event) // call out of context\n      : this.originalOptions.clickOutsideDeactivates; // boolean\n\n      if (allowDeactivation) {\n        // capture the outside target that was clicked so we can use it in the deactivation\n        //  process since the consumer allowed it to cause auto-deactivation\n        this.outsideClick = {\n          target: event.target,\n          allowDeactivation: allowDeactivation\n        };\n      }\n      return allowDeactivation;\n    }\n  }, {\n    key: \"handleDeactivate\",\n    value: function handleDeactivate() {\n      if (this.originalOptions.onDeactivate) {\n        this.originalOptions.onDeactivate.call(null); // call user's handler out of context\n      }\n\n      this.deactivateTrap();\n    }\n  }, {\n    key: \"handlePostDeactivate\",\n    value: function handlePostDeactivate() {\n      var _this2 = this;\n      var finishDeactivation = function finishDeactivation() {\n        var returnFocusNode = _this2.getReturnFocusNode();\n        var canReturnFocus = !!(\n        // did the consumer allow it?\n\n        _this2.originalOptions.returnFocusOnDeactivate && // can we actually focus the node?\n        returnFocusNode !== null && returnFocusNode !== void 0 && returnFocusNode.focus && (\n        // was there an outside click that allowed deactivation?\n        !_this2.outsideClick ||\n        // did the consumer allow deactivation when the outside node was clicked?\n        _this2.outsideClick.allowDeactivation &&\n        // is the outside node NOT focusable (implying that it did NOT receive focus\n        //  as a result of the click-through) -- in which case do NOT restore focus\n        //  to `returnFocusNode` because focus should remain on the outside node\n        !isFocusable(_this2.outsideClick.target, _this2.internalOptions.tabbableOptions))\n\n        // if no, the restore focus to `returnFocusNode` at this point\n        );\n\n        var _this2$internalOption = _this2.internalOptions.preventScroll,\n          preventScroll = _this2$internalOption === void 0 ? false : _this2$internalOption;\n        if (canReturnFocus) {\n          // return focus to the element that had focus when the trap was activated\n          returnFocusNode.focus({\n            preventScroll: preventScroll\n          });\n        }\n        if (_this2.originalOptions.onPostDeactivate) {\n          _this2.originalOptions.onPostDeactivate.call(null); // don't call it in context of \"this\"\n        }\n\n        _this2.outsideClick = null; // reset: no longer needed\n      };\n\n      if (this.originalOptions.checkCanReturnFocus) {\n        this.originalOptions.checkCanReturnFocus.call(null, this.getReturnFocusNode()) // call out of context\n        .then(finishDeactivation, finishDeactivation);\n      } else {\n        finishDeactivation();\n      }\n    }\n  }, {\n    key: \"setupFocusTrap\",\n    value: function setupFocusTrap() {\n      if (this.focusTrap) {\n        // trap already exists: it's possible we're in StrictMode and we're being remounted,\n        //  in which case, we will have deactivated the trap when we got unmounted (remember,\n        //  StrictMode, in development, purposely unmounts and remounts components after\n        //  mounting them the first time to make sure they have reusable state,\n        //  @see https://reactjs.org/docs/strict-mode.html#ensuring-reusable-state) so now\n        //  we need to restore the state of the trap according to our component state\n        // NOTE: Strict mode __violates__ assumptions about the `componentWillUnmount()` API\n        //  which clearly states -- even for React 18 -- that, \"Once a component instance is\n        //  unmounted, __it will never be mounted again.__\" (emphasis ours). So when we get\n        //  unmounted, we assume we're gone forever and we deactivate the trap. But then\n        //  we get remounted and we're supposed to restore state. But if you had paused,\n        //  we've now deactivated (we don't know we're amount to get remounted again)\n        //  which means we need to reactivate and then pause. Otherwise, do nothing.\n        if (this.props.active && !this.focusTrap.active) {\n          this.focusTrap.activate();\n          if (this.props.paused) {\n            this.focusTrap.pause();\n          }\n        }\n      } else {\n        var nodesExist = this.focusTrapElements.some(Boolean);\n        if (nodesExist) {\n          // eslint-disable-next-line react/prop-types -- _createFocusTrap is an internal prop\n          this.focusTrap = this.props._createFocusTrap(this.focusTrapElements, this.internalOptions);\n          if (this.props.active) {\n            this.focusTrap.activate();\n          }\n          if (this.props.paused) {\n            this.focusTrap.pause();\n          }\n        }\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.active) {\n        this.setupFocusTrap();\n      }\n      // else, wait for later activation in case the `focusTrapOptions` will be updated\n      //  again before the trap is activated (e.g. if waiting to know what the document\n      //  object will be, so the Trap must be rendered, but the consumer is waiting to\n      //  activate until they have obtained the document from a ref)\n      //  @see https://github.com/focus-trap/focus-trap-react/issues/539\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.focusTrap) {\n        if (prevProps.containerElements !== this.props.containerElements) {\n          this.focusTrap.updateContainerElements(this.props.containerElements);\n        }\n        var hasActivated = !prevProps.active && this.props.active;\n        var hasDeactivated = prevProps.active && !this.props.active;\n        var hasPaused = !prevProps.paused && this.props.paused;\n        var hasUnpaused = prevProps.paused && !this.props.paused;\n        if (hasActivated) {\n          this.updatePreviousElement();\n          this.focusTrap.activate();\n        }\n        if (hasDeactivated) {\n          this.deactivateTrap();\n          return; // un/pause does nothing on an inactive trap\n        }\n\n        if (hasPaused) {\n          this.focusTrap.pause();\n        }\n        if (hasUnpaused) {\n          this.focusTrap.unpause();\n        }\n      } else {\n        // NOTE: if we're in `componentDidUpdate` and we don't have a trap yet,\n        //  it either means it shouldn't be active, or it should be but none of\n        //  of given `containerElements` were present in the DOM the last time\n        //  we tried to create the trap\n\n        if (prevProps.containerElements !== this.props.containerElements) {\n          this.focusTrapElements = this.props.containerElements;\n        }\n\n        // don't create the trap unless it should be active in case the consumer\n        //  is still updating `focusTrapOptions`\n        //  @see https://github.com/focus-trap/focus-trap-react/issues/539\n        if (this.props.active) {\n          this.updatePreviousElement();\n          this.setupFocusTrap();\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.deactivateTrap();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      var child = this.props.children ? React.Children.only(this.props.children) : undefined;\n      if (child) {\n        if (child.type && child.type === React.Fragment) {\n          throw new Error('A focus-trap cannot use a Fragment as its child container. Try replacing it with a <div> element.');\n        }\n        var callbackRef = function callbackRef(element) {\n          var containerElements = _this3.props.containerElements;\n          if (child) {\n            if (typeof child.ref === 'function') {\n              child.ref(element);\n            } else if (child.ref) {\n              child.ref.current = element;\n            }\n          }\n          _this3.focusTrapElements = containerElements ? containerElements : [element];\n        };\n        var childWithRef = React.cloneElement(child, {\n          ref: callbackRef\n        });\n        return childWithRef;\n      }\n      return null;\n    }\n  }]);\n  return FocusTrap;\n}(React.Component); // support server-side rendering where `Element` will not be defined\nvar ElementType = typeof Element === 'undefined' ? Function : Element;\nFocusTrap.propTypes = {\n  active: PropTypes.bool,\n  paused: PropTypes.bool,\n  focusTrapOptions: PropTypes.shape({\n    document: PropTypes.object,\n    onActivate: PropTypes.func,\n    onPostActivate: PropTypes.func,\n    checkCanFocusTrap: PropTypes.func,\n    onDeactivate: PropTypes.func,\n    onPostDeactivate: PropTypes.func,\n    checkCanReturnFocus: PropTypes.func,\n    initialFocus: PropTypes.oneOfType([PropTypes.instanceOf(ElementType), PropTypes.string, PropTypes.bool, PropTypes.func]),\n    fallbackFocus: PropTypes.oneOfType([PropTypes.instanceOf(ElementType), PropTypes.string,\n    // NOTE: does not support `false` as value (or return value from function)\n    PropTypes.func]),\n    escapeDeactivates: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n    clickOutsideDeactivates: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n    returnFocusOnDeactivate: PropTypes.bool,\n    setReturnFocus: PropTypes.oneOfType([PropTypes.instanceOf(ElementType), PropTypes.string, PropTypes.bool, PropTypes.func]),\n    allowOutsideClick: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n    preventScroll: PropTypes.bool,\n    tabbableOptions: PropTypes.shape({\n      displayCheck: PropTypes.oneOf(['full', 'legacy-full', 'non-zero-area', 'none']),\n      getShadowRoot: PropTypes.oneOfType([PropTypes.bool, PropTypes.func])\n    }),\n    trapStack: PropTypes.array,\n    isKeyForward: PropTypes.func,\n    isKeyBackward: PropTypes.func\n  }),\n  containerElements: PropTypes.arrayOf(PropTypes.instanceOf(ElementType)),\n  // DOM element ONLY\n  children: PropTypes.oneOfType([PropTypes.element,\n  // React element\n  PropTypes.instanceOf(ElementType) // DOM element\n  ])\n\n  // NOTE: _createFocusTrap is internal, for testing purposes only, so we don't\n  //  specify it here. It's expected to be set to the function returned from\n  //  require('focus-trap'), or one with a compatible interface.\n};\n\nFocusTrap.defaultProps = {\n  active: true,\n  paused: false,\n  focusTrapOptions: {},\n  _createFocusTrap: createFocusTrap\n};\nmodule.exports = FocusTrap;","import { createPortal } from 'react-dom';\n/* c8 ignore start */\n\n/**\n * Renders the children into a portal if the selector is found, otherwise renders the children.\n *\n * @param {string | undefined} props.selector - The selector to use to find the element to render the portal into.\n * @param {JSX.Element} props.children - The children to render into the portal.\n *\n * @returns {JSX.Element} - The children rendered into the portal if the selector is found, otherwise the children.\n */\nexport default function ConditionalPortalWrapper({\n\tselector,\n\tchildren,\n}: {\n\tselector: string | undefined;\n\tchildren: JSX.Element;\n}) {\n\tconst portalElement = selector ? document.querySelector(selector) : null;\n\treturn portalElement ? createPortal(children, portalElement) : children;\n}\n/* c8 ignore end */\n","// eslint-disable-next-line import/no-extraneous-dependencies\nimport { ReactNode, useEffect, useState } from 'react';\nimport FocusTrap from 'focus-trap-react';\nimport './Modal.css';\nimport ConditionalPortalWrapper from '../ConditionalPortalWrapper/ConditionalPortalWrapper';\n\nexport interface ButtonProperties {\n\tlabel: string | JSX.Element | ReactNode;\n\tvariant?: 'secondary';\n\tcolor?: string;\n\tonClick?: () => void;\n\ttimer?: number;\n}\n\nexport interface ModalProperties {\n\topen: boolean;\n\tonClose: () => void | void;\n\tcontent: string | JSX.Element | ReactNode;\n\ttitle?: string | JSX.Element | ReactNode;\n\tbuttons?: [] | ButtonProperties[] | JSX.Element | ReactNode;\n\theight?: string;\n\twidth?: string;\n\tclosable?: boolean;\n\ttrapFocus?: boolean;\n\tportalSelector?: string;\n\tdimBackground?: boolean;\n}\n\nfunction ModalButton({\n\tlabel,\n\tvariant,\n\tonClick,\n\tcolor,\n\ttimer,\n}: ButtonProperties) {\n\tconst [count, setCount] = useState(timer);\n\n\tuseEffect(() => {\n\t\tif (count) {\n\t\t\tsetInterval(() => {\n\t\t\t\tsetCount((prevCount) => prevCount && prevCount - 1);\n\t\t\t}, 1000);\n\t\t}\n\t}, []);\n\n\treturn (\n\t\t<button\n\t\t\ttype=\"button\"\n\t\t\tstyle={color ? { backgroundColor: color } : {}}\n\t\t\tclassName={\n\t\t\t\tvariant === 'secondary'\n\t\t\t\t\t? 'modal__btn modal__btn--secondary'\n\t\t\t\t\t: 'modal__btn'\n\t\t\t}\n\t\t\tonClick={onClick}\n\t\t\tdisabled={!!count}\n\t\t>\n\t\t\t{label}\n\t\t\t{count ? ` (${count})` : ''}\n\t\t</button>\n\t);\n}\n\nfunction Modal({\n\ttitle,\n\tcontent,\n\tbuttons,\n\topen = true,\n\theight,\n\twidth,\n\tclosable,\n\tonClose,\n\ttrapFocus = true,\n\tportalSelector,\n\tdimBackground = true,\n}: ModalProperties) {\n\t/**\n\t * Wrapper for button onClick.\n\t * Ensure that the modal is closed after onClick callback is called.\n\t *\n\t * @param {ButtonProperties} button\n\t */\n\tfunction onClickWrapper(button: ButtonProperties) {\n\t\tif (button.onClick) button.onClick();\n\t\tif (onClose) onClose();\n\t}\n\n\tuseEffect(() => {\n\t\t// Keyboard accessibility\n\t\tconst handleKeydown = (e: KeyboardEvent) => {\n\t\t\tif (e.code === 'Escape') onClose();\n\t\t};\n\t\tif (open) {\n\t\t\tdocument.addEventListener('keydown', handleKeydown);\n\t\t}\n\t\treturn () => document.removeEventListener('keydown', handleKeydown);\n\t}, [open]);\n\n\treturn open ? (\n\t\t<ConditionalPortalWrapper selector={portalSelector}>\n\t\t\t<>\n\t\t\t\t{dimBackground ? (\n\t\t\t\t\t<div id=\"modal-bg\" className=\"modal__bg\" data-testid=\"modal-bg\" />\n\t\t\t\t) : null}\n\t\t\t\t<FocusTrap active={open && trapFocus}>\n\t\t\t\t\t<div className=\"modal__container\">\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tid=\"modal\"\n\t\t\t\t\t\t\tdata-testid=\"modal\"\n\t\t\t\t\t\t\tclassName=\"modal\"\n\t\t\t\t\t\t\tstyle={{ width, height }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{closable ? (\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tdata-testid=\"closeBtn\"\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\tonClick={onClose}\n\t\t\t\t\t\t\t\t\tclassName=\"modal__close-btn\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n\t\t\t\t\t\t\t\t\t\t<path d=\"M256 512c141.4 0 256-114.6 256-256S397.4 0 256 0S0 114.6 0 256S114.6 512 256 512zM175 175c9.4-9.4 24.6-9.4 33.9 0l47 47 47-47c9.4-9.4 24.6-9.4 33.9 0s9.4 24.6 0 33.9l-47 47 47 47c9.4 9.4 9.4 24.6 0 33.9s-24.6 9.4-33.9 0l-47-47-47 47c-9.4 9.4-24.6 9.4-33.9 0s-9.4-24.6 0-33.9l47-47-47-47c-9.4-9.4-9.4-24.6 0-33.9z\" />\n\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t<div className=\"modal__header\">\n\t\t\t\t\t\t\t\t{typeof title === 'string' ? (\n\t\t\t\t\t\t\t\t\t<h2 className=\"modal__title\">{title}</h2>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"modal__body\">\n\t\t\t\t\t\t\t\t{typeof content === 'string' ? (\n\t\t\t\t\t\t\t\t\t<p className=\"modal__content\">{content}</p>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\tcontent\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"modal__footer\">\n\t\t\t\t\t\t\t\t{!buttons && <ModalButton label=\"Ok\" onClick={onClose} />}\n\t\t\t\t\t\t\t\t{buttons && Array.isArray(buttons)\n\t\t\t\t\t\t\t\t\t? buttons.map((button: ButtonProperties) => (\n\t\t\t\t\t\t\t\t\t\t<ModalButton\n\t\t\t\t\t\t\t\t\t\t\tkey={crypto.randomUUID()}\n\t\t\t\t\t\t\t\t\t\t\tlabel={button.label}\n\t\t\t\t\t\t\t\t\t\t\tvariant={button.variant}\n\t\t\t\t\t\t\t\t\t\t\tonClick={\n\t\t\t\t\t\t\t\t\t\t\t\tbutton.onClick\n\t\t\t\t\t\t\t\t\t\t\t\t\t? () => onClickWrapper(button)\n\t\t\t\t\t\t\t\t\t\t\t\t\t: onClose\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\ttimer={button.timer}\n\t\t\t\t\t\t\t\t\t\t\tcolor={button.color}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t\t: buttons}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</FocusTrap>\n\t\t\t</>\n\t\t</ConditionalPortalWrapper>\n\t) : null;\n}\n\nexport default Modal;\n","/* eslint-disable react/function-component-definition */\n/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable import/no-extraneous-dependencies */\nimport { StoryFn } from '@storybook/react';\nimport Modal, { ModalProperties } from './Modal';\nimport '../../App.css';\nexport default {\n  title: 'Modal',\n  component: Modal,\n  parameters: {\n    previewTabs: {\n      'storybook/docs/panel': {\n        hidden: true\n      }\n    },\n    viewMode: 'canvas'\n  }\n};\nconst Template: StoryFn<typeof Modal> = (args: ModalProperties) => <Modal {...args} trapFocus={false} />;\nexport const Default = Template.bind({});\nDefault.args = {\n  title: 'Confirmation',\n  content: 'This is a message'\n};\nexport const Closable = Template.bind({});\nClosable.args = {\n  title: 'Information',\n  content: 'This is a message',\n  closable: true,\n  buttons: []\n};\nexport const TwoButtons = Template.bind({});\nTwoButtons.args = {\n  title: 'Are you sure?',\n  content: 'This action cannot be undone.',\n  buttons: [{\n    label: 'Delete',\n    variant: 'secondary'\n  }, {\n    label: 'Cancel'\n  }]\n};\nexport const TimerButton = Template.bind({});\nTimerButton.args = {\n  title: 'Are you sure?',\n  content: 'This action cannot be undone.',\n  buttons: [{\n    label: 'Delete',\n    variant: 'secondary',\n    timer: 5\n  }, {\n    label: 'Cancel'\n  }]\n};\nexport const LargeTextContent = Template.bind({});\nLargeTextContent.args = {\n  title: 'Terms of use',\n  content: 'Lorem ipsum dolor sit amet, officia excepteur ex fugiat reprehenderit enim labore culpa sint ad nisi Lorem pariatur mollit ex esse exercitation amet. Nisi anim cupidatat excepteur officia. Reprehenderit nostrud nostrud ipsum Lorem est aliquip amet voluptate voluptate dolor minim nulla est proident. Nostrud officia pariatur ut officia. Sit irure elit esse ea nulla sunt ex occaecat reprehenderit commodo officia dolor Lorem duis laboris cupidatat officia voluptate. Culpa proident adipisicing id nulla nisi laboris ex in Lorem sunt duis officia eiusmod. Aliqua reprehenderit commodo ex non excepteur duis sunt velit enim. Voluptate laboris sint cupidatat ullamco ut ea consectetur et est culpa et culpa duis.',\n  buttons: [{\n    label: 'Accept'\n  }, {\n    label: 'Decline',\n    variant: 'secondary'\n  }]\n};\nexport const CustomHTMLContent = Template.bind({});\nconst employeeForm = <form style={{\n  display: 'flex',\n  flexDirection: 'column',\n  gap: '10px'\n}}>\n        <label style={{\n    fontWeight: 'bold'\n  }} htmlFor=\"firstname\">\n            FirstName\n        </label>\n        <input style={{\n    padding: '10px',\n    borderRadius: '5px',\n    border: '1px solid var(--grey-200)'\n  }} type=\"text\" name=\"firstname\" />\n        <label style={{\n    fontWeight: 'bold'\n  }} htmlFor=\"lastname\">\n            LastName\n        </label>\n        <input style={{\n    padding: '10px',\n    borderRadius: '5px',\n    border: '1px solid var(--grey-200)'\n  }} type=\"text\" name=\"lastname\" />\n    </form>;\nCustomHTMLContent.args = {\n  title: 'Create Employee',\n  content: employeeForm,\n  closable: true,\n  buttons: [{\n    label: 'Submit'\n  }]\n};\nDefault.parameters = {\n  ...Default.parameters,\n  docs: {\n    ...Default.parameters?.docs,\n    source: {\n      originalSource: \"(args: ModalProperties) => <Modal {...args} trapFocus={false} />\",\n      ...Default.parameters?.docs?.source\n    }\n  }\n};\nClosable.parameters = {\n  ...Closable.parameters,\n  docs: {\n    ...Closable.parameters?.docs,\n    source: {\n      originalSource: \"(args: ModalProperties) => <Modal {...args} trapFocus={false} />\",\n      ...Closable.parameters?.docs?.source\n    }\n  }\n};\nTwoButtons.parameters = {\n  ...TwoButtons.parameters,\n  docs: {\n    ...TwoButtons.parameters?.docs,\n    source: {\n      originalSource: \"(args: ModalProperties) => <Modal {...args} trapFocus={false} />\",\n      ...TwoButtons.parameters?.docs?.source\n    }\n  }\n};\nTimerButton.parameters = {\n  ...TimerButton.parameters,\n  docs: {\n    ...TimerButton.parameters?.docs,\n    source: {\n      originalSource: \"(args: ModalProperties) => <Modal {...args} trapFocus={false} />\",\n      ...TimerButton.parameters?.docs?.source\n    }\n  }\n};\nLargeTextContent.parameters = {\n  ...LargeTextContent.parameters,\n  docs: {\n    ...LargeTextContent.parameters?.docs,\n    source: {\n      originalSource: \"(args: ModalProperties) => <Modal {...args} trapFocus={false} />\",\n      ...LargeTextContent.parameters?.docs?.source\n    }\n  }\n};\nCustomHTMLContent.parameters = {\n  ...CustomHTMLContent.parameters,\n  docs: {\n    ...CustomHTMLContent.parameters?.docs,\n    source: {\n      originalSource: \"(args: ModalProperties) => <Modal {...args} trapFocus={false} />\",\n      ...CustomHTMLContent.parameters?.docs?.source\n    }\n  }\n};"],"names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","h","reactJsxRuntime_production_min","module","candidateSelectors","candidateSelector","NoElement","matches","getRootNode","element","_element$getRootNode","isInert","node","lookUp","_node$getAttribute","inertAtt","inert","result","isContentEditable","_node$getAttribute2","attValue","getCandidates","el","includeContainer","filter","candidates","getCandidatesIteratively","elements","options","elementsToCheck","assigned","content","nestedCandidates","validCandidate","shadowRoot","validShadowRoot","_nestedCandidates","getTabindex","isScope","sortOrderedTabbables","isInput","isHiddenInput","isDetailsWithSummary","r","child","getCheckedRadio","nodes","form","i","isTabbableRadio","radioScope","queryRadios","name","radioSet","err","checked","isRadio","isNonTabbableRadio","isNodeAttached","_nodeRoot","nodeRoot","nodeRootHost","attached","_nodeRootHost","_nodeRootHost$ownerDo","_node$ownerDocument","_nodeRoot2","_nodeRootHost2","_nodeRootHost2$ownerD","isZeroArea","_node$getBoundingClie","width","height","isHidden","_ref","displayCheck","getShadowRoot","isDirectSummary","nodeUnderDetails","originalNode","parentElement","rootNode","isDisabledFromFieldset","parentNode","isNodeMatchingSelectorFocusable","isNodeMatchingSelectorTabbable","isValidShadowRootTabbable","shadowHostNode","tabIndex","sortByOrder","regularTabbables","orderedTabbables","item","candidateTabindex","acc","sortable","tabbable","focusable","isTabbable","focusableCandidateSelector","isFocusable","ownKeys","object","enumerableOnly","keys","symbols","sym","_objectSpread2","target","source","key","_defineProperty","obj","value","_toPropertyKey","_toPrimitive","input","hint","prim","res","arg","activeFocusTraps","trapStack","trap","activeTrap","trapIndex","isSelectableInput","isEscapeEvent","isTabEvent","isKeyForward","isKeyBackward","delay","fn","findIndex","arr","idx","valueOrHandler","_len","params","_key","getActualTarget","event","internalTrapStack","createFocusTrap","userOptions","doc","config","state","getOption","configOverrideOptions","optionName","configOptionName","findContainerIndex","container","tabbableNodes","getNodeForOption","optionValue","_len2","_key2","getInitialFocusNode","firstTabbableGroup","firstTabbableNode","updateTabbableNodes","focusableNodes","forward","nodeIdx","group","tryFocus","getReturnFocusNode","previousActiveElement","checkPointerDown","checkFocusIn","targetContained","checkKeyNav","isBackward","destinationNode","containerIndex","containerGroup","startOfGroupIndex","_ref2","destinationGroupIndex","destinationGroup","lastOfGroupIndex","_ref3","lastTabbableNode","_destinationGroupIndex","_destinationGroup","checkKey","checkClick","addListeners","removeListeners","activateOptions","onActivate","onPostActivate","checkCanFocusTrap","finishActivation","deactivateOptions","onDeactivate","onPostDeactivate","checkCanReturnFocus","returnFocus","finishDeactivation","containerElements","elementsAsArray","_typeof","_classCallCheck","instance","Constructor","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","_inherits","subClass","superClass","_setPrototypeOf","o","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","Super","_getPrototypeOf","NewTarget","_possibleConstructorReturn","self","call","_assertThisInitialized","React","PropTypes","require$$1","_require","require$$2","_require2","require$$3","FocusTrap","_React$Component","_super","_this","_this$internalOptions","_this$getDocument","focusTrapOptions","currentDocument","allowDeactivation","_this2","returnFocusNode","canReturnFocus","_this2$internalOption","preventScroll","nodesExist","prevProps","hasActivated","hasDeactivated","hasPaused","hasUnpaused","_this3","callbackRef","childWithRef","ElementType","focusTrapReact","ConditionalPortalWrapper","selector","children","portalElement","createPortal","ModalButton","label","variant","onClick","color","timer","count","setCount","useState","useEffect","prevCount","jsxs","Modal","title","buttons","open","closable","onClose","trapFocus","portalSelector","dimBackground","onClickWrapper","button","handleKeydown","jsx","Fragment","Modal_stories","Template","args","Default","Closable","TwoButtons","TimerButton","LargeTextContent","CustomHTMLContent","employeeForm","_a","_c","_b"],"mappings":"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"}